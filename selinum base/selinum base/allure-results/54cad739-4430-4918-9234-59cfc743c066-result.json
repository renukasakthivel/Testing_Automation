{"name": "test_cart_price_details", "status": "failed", "statusDetails": {"message": "Failed: Test failed due to exception", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b14aa447891cf99daf0ef392c2f5e868\")>\n\n    @pytest.mark.cart\n    def test_cart_price_details(driver):\n        try:\n            # Login to the application\n            login_to_flask_shop(driver, BASE_URL, USERNAME, PASSWORD)\n    \n            # Verify that we're logged in and redirected (check URL after login)\n            assert BASE_URL + \"/login\" not in driver.current_url, \"Login page not redirected\"\n            print(f\"Current URL after login: {driver.current_url}\")\n    \n            # Navigate to the cart\n            navigate_to_cart(driver, BASE_URL)\n    \n            # Get cart price details\n            price_ids, grand_total = get_cart_price_details(driver)\n    \n            # Verify that price details are retrieved\n>           assert price_ids is not None, \"Failed to retrieve price IDs\"\nE           AssertionError: Failed to retrieve price IDs\nE           assert None is not None\n\ntest_cart_navigation.py:82: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b14aa447891cf99daf0ef392c2f5e868\")>\n\n    @pytest.mark.cart\n    def test_cart_price_details(driver):\n        try:\n            # Login to the application\n            login_to_flask_shop(driver, BASE_URL, USERNAME, PASSWORD)\n    \n            # Verify that we're logged in and redirected (check URL after login)\n            assert BASE_URL + \"/login\" not in driver.current_url, \"Login page not redirected\"\n            print(f\"Current URL after login: {driver.current_url}\")\n    \n            # Navigate to the cart\n            navigate_to_cart(driver, BASE_URL)\n    \n            # Get cart price details\n            price_ids, grand_total = get_cart_price_details(driver)\n    \n            # Verify that price details are retrieved\n            assert price_ids is not None, \"Failed to retrieve price IDs\"\n            assert grand_total is not None, \"Failed to retrieve grand total\"\n    \n            # You can perform further assertions or checks based on the retrieved details\n            # For example, check that the grand total is a valid number (if applicable)\n            assert grand_total.startswith(\"$\"), \"Grand total format is incorrect\"\n    \n        except Exception as e:\n            print(f\"Test failed with error: {e}\")\n            take_screenshot(driver, \"test_cart_price_details_failed\")  # Capture screenshot on failure\n>           pytest.fail(\"Test failed due to exception\")\nE           Failed: Test failed due to exception\n\ntest_cart_navigation.py:92: Failed"}, "attachments": [{"name": "stdout", "source": "cd505dd8-3b0e-4a25-82c6-fee53650c4b2-attachment.txt", "type": "text/plain"}], "start": 1745079703146, "stop": 1745079726889, "uuid": "bed05e3f-ce79-4ad7-9467-44b7f51d1b62", "historyId": "23e845c189f2cb9853425f6604dd826d", "testCaseId": "23e845c189f2cb9853425f6604dd826d", "fullName": "test_cart_navigation#test_cart_price_details", "labels": [{"name": "tag", "value": "cart"}, {"name": "suite", "value": "test_cart_navigation"}, {"name": "host", "value": "DESKTOP-H49NC95"}, {"name": "thread", "value": "15576-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cart_navigation"}]}